{"version":3,"sources":["components/Input/Input.js","components/CurrentWeather/Secondary/Secondary.js","components/CurrentWeather/CurrentWeather.js","components/ForecastWeather/ForecastWeatherHour/ForecastWeatherHour.js","components/ForecastWeather/ForecastWeather.js","components/Error/Error.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","data-netlify","onSubmit","e","preventDefault","style","opacity","type","name","placeholder","onKeyPress","onKeypress","value","onChange","Secondary","high","wind","sunrise","low","pressure","sunset","coords","lat","lon","humidity","CurrentWeather","weatherData","date","getDay","getDate","getMonth","src","icon","alt","temp","description","getHours","getMinutes","coordinates","ConvertDateTo12HFormat","hours","ForecastWeatherHour","weekday","toLocaleString","ForecastWeather","forecast","map","hour","i","toISOString","Error","Footer","API_KEY","process","REACT_APP_WEATHER_API_KEY","App","useState","city","setCity","setWeatherData","error","setError","ref","useRef","getWeather","a","axios","get","current_weather","data","Math","round","main","temp_max","temp_min","Date","dt","sys","weather","speed","country","coord","forecast_weather","timezone","hourly_forecast","hourly","setTimeout","console","log","current","offsetTop","window","scrollTo","message","which","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0bA6BeA,EA1BD,SAACC,GAKb,OACE,uBACEC,UAAU,YACVC,eAAa,OACbC,SARsB,SAACC,GACzBA,EAAEC,kBAQAC,MAAO,CAAEC,QAAS,OAJpB,UAME,mBAAGN,UAAU,eAAeK,MAAO,CAAEC,QAAS,SAC9C,uBACEC,KAAK,OACLC,KAAK,YACLR,UAAU,QACVS,YAAY,aACZC,WAAYX,EAAMY,WAClBC,MAAOb,EAAMa,MACbC,SAAUd,EAAMc,eCsBTC,G,YA3CG,SAACf,GACjB,OACE,sBAAKC,UAAU,iBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,6BAAKD,EAAMgB,OACX,yCAEF,sBAAKf,UAAU,sBAAf,UACE,+BAAKD,EAAMiB,KAAX,UACA,yCAEF,sBAAKhB,UAAU,sBAAf,UACE,6BAAKD,EAAMkB,UACX,4CAEF,sBAAKjB,UAAU,sBAAf,UACE,6BAAKD,EAAMmB,MACX,wCAEF,sBAAKlB,UAAU,sBAAf,UACE,+BAAKD,EAAMoB,SAAX,UACA,6CAEF,sBAAKnB,UAAU,sBAAf,UACE,6BAAKD,EAAMqB,SACX,2CAEF,sBAAKpB,UAAU,sBAAf,UACE,6BAAKD,EAAMsB,OAAOC,MAClB,6CAEF,sBAAKtB,UAAU,sBAAf,UACE,6BAAKD,EAAMsB,OAAOE,MAClB,8CAEF,sBAAKvB,UAAU,sBAAf,UACE,+BAAKD,EAAMyB,SAAX,OACA,kDCsBOC,EAzDQ,SAAC1B,GAwBtB,OACE,sBAAKC,UAAU,sBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBD,EAAM2B,YAAYlB,OACzC,oBAAIR,UAAU,OAAd,mBA5BI,CACV,SACA,SACA,UACA,YACA,WACA,SACA,YAsBYD,EAAM2B,YAAYC,KAAKC,UAD7B,YAEI7B,EAAM2B,YAAYC,KAAKE,UAF3B,YAnBM,CACZ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAUc9B,EAAM2B,YAAYC,KAAKG,kBAGjC,sBAAK9B,UAAU,UAAf,UACE,qBAAK+B,IAAKhC,EAAM2B,YAAYM,KAAMC,IAAI,GAAGjC,UAAU,SACnD,oBAAIA,UAAU,OAAd,mBAAyBD,EAAM2B,YAAYQ,KAA3C,UACA,oBAAIlC,UAAU,OAAd,SAAsBD,EAAM2B,YAAYS,oBAG5C,qBAAKnC,UAAU,YAAf,SACE,cAAC,EAAD,CACEe,KAAI,UAAKhB,EAAM2B,YAAYX,KAAvB,QACJG,IAAG,UAAKnB,EAAM2B,YAAYR,IAAvB,QACHF,KAAMjB,EAAM2B,YAAYV,KACxBC,QAAO,UAAKlB,EAAM2B,YAAYT,QAAQmB,WAA/B,YAA6CrC,EAAM2B,YAAYT,QAAQoB,cAC9EjB,OAAM,UAAKrB,EAAM2B,YAAYN,OAAOgB,WAA9B,YAA4CrC,EAAM2B,YAAYN,OAAOiB,cAC3ElB,SAAUpB,EAAM2B,YAAYP,SAC5BE,OAAQtB,EAAM2B,YAAYY,YAC1Bd,SAAUzB,EAAM2B,YAAYF,iB,mBCpDtC,SAASe,EAAuBZ,GAC5B,IACIa,EAAQb,EAAKS,WAAa,GAAKT,EAAKS,WAAa,GAAKT,EAAKS,WAM/D,OALa,IAAVI,IACDA,EAAQ,IAGHA,EAAQ,KADHb,EAAKS,YAAc,GAAK,KAAO,MAK/C,IAYeK,EAZa,SAAC1C,GAC3B,IAAI2C,EAAU3C,EAAM4B,KAAKgB,eAAe,UAAW,CAAED,QAAS,SAC9D,OACE,sBAAK1C,UAAU,wBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsB0C,IACtB,oBAAI1C,UAAU,QAAd,SAAuBuC,EAAuBxC,EAAM4B,QACpD,qBAAKI,IAAKhC,EAAMiC,KAAMC,IAAI,GAAGjC,UAAU,SACvC,oBAAIA,UAAU,OAAd,mBAAyBD,EAAMmC,KAA/B,cCGSU,EAnBS,SAAC7C,GACvB,OACE,sBAAKC,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,sBACA,qBAAKA,UAAU,mBAAf,SACGD,EAAM8C,SAASC,KAAI,SAACC,EAAMC,GACzB,OACE,cAAC,EAAD,2BAEMD,GAFN,IAGEC,EAAGA,IAFED,EAAKpB,KAAKsB,wBCFdC,G,MARD,WACZ,OACE,qBAAKlD,UAAU,QAAf,SACE,8ECOSmD,G,MAVA,WACb,OACE,qBAAKnD,UAAU,SAAf,SACE,uECMAoD,EAAUC,+IAAYC,0BA2FbC,MAzFf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,mBAAS,MAA/C,mBAAO9B,EAAP,KAAoBiC,EAApB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACMC,EAAMC,mBAENC,EAAU,uCAAG,gCAAAC,EAAA,6DACjBJ,GAAS,GADQ,kBAGeK,IAAMC,IAAN,4DACyBV,EADzB,kBACuCL,IAJtD,cAGTgB,EAHS,OAMTC,EAAO,CACXnC,KAAMoC,KAAKC,MAAMH,EAAgBC,KAAKG,KAAKtC,KAAO,QAClDnB,KAAMuD,KAAKC,MAAMH,EAAgBC,KAAKG,KAAKC,SAAW,QACtDvD,IAAKoD,KAAKC,MAAMH,EAAgBC,KAAKG,KAAKE,SAAW,QACrD/C,KAAM,IAAIgD,KAA+B,IAA1BP,EAAgBC,KAAKO,IACpC3D,QAAS,IAAI0D,KAAwC,IAAnCP,EAAgBC,KAAKQ,IAAI5D,SAC3CG,OAAQ,IAAIuD,KAAuC,IAAlCP,EAAgBC,KAAKQ,IAAIzD,QAC1Ce,YAAaiC,EAAgBC,KAAKS,QAAQ,GAAG3C,YAC7CnB,KAAMoD,EAAgBC,KAAKrD,KAAK+D,MAChCvE,KACE4D,EAAgBC,KAAK7D,KAAO,KAAO4D,EAAgBC,KAAKQ,IAAIG,QAC9D1C,YAAa,CACXhB,IAAK8C,EAAgBC,KAAKY,MAAM3D,IAChCC,IAAK6C,EAAgBC,KAAKY,MAAM1D,KAElCC,SAAU4C,EAAgBC,KAAKG,KAAKhD,SACpCL,SAAUiD,EAAgBC,KAAKG,KAAKrD,SACpCa,KAAK,oCAAD,OAAsCoC,EAAgBC,KAAKS,QAAQ,GAAG9C,KAAtE,YAvBS,SA0BgBkC,IAAMC,IAAN,8DAC0BE,EAAK/B,YAAYhB,IAD3C,gBACsD+C,EAAK/B,YAAYf,IADvE,uDACyH6B,IA3BzI,OA0BT8B,EA1BS,OA8Bfb,EAAKc,SAAWD,EAAiBb,KAAKc,SACtCd,EAAKe,gBAAkBF,EAAiBb,KAAKgB,OAAOvC,KAAI,SAACC,GACvD,MAAO,CACLpB,KAAM,IAAIgD,KAAe,IAAV5B,EAAK6B,IACpB5C,KAAK,oCAAD,OAAsCe,EAAK+B,QAAQ,GAAG9C,KAAtD,WACJE,KAAMoC,KAAKC,MAAMxB,EAAKb,KAAO,YAIjCyB,EAAeU,GACfiB,YAAW,WACTC,QAAQC,IAAI1B,EAAI2B,QAAQC,WACxBC,OAAOC,SAAS,EAAG9B,EAAI2B,QAAQC,aAC9B,KAEHH,QAAQC,IAAInB,GA7CG,kDA+CfkB,QAAQC,IAAI,KAAIK,SAChBhC,GAAS,GAhDM,0DAAH,qDA+DhB,OACE,sBAAK7D,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,yBACA,cAAC,EAAD,CACEW,WAfkB,SAACR,GACP,KAAZA,EAAE2F,QACJP,QAAQC,IAAI/B,GACZO,IACAN,EAAQ,MAYN7C,SARgB,SAACV,GACrBuD,EAAQvD,EAAE4F,OAAOnF,QAQbA,MAAO6C,IAET,sBAAKK,IAAKA,EAAV,WACIF,GAASlC,GAAe,cAAC,EAAD,CAAgBA,YAAaA,KACrDkC,GAASlC,GACT,cAAC,EAAD,CAAiBmB,SAAUnB,EAAY0D,kBAExCxB,GAAS,cAAC,EAAD,OAEZ,cAAC,EAAD,QCrFSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa03a1e2.chunk.js","sourcesContent":["import \"./Input.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nconst Input = (props) => {\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <form\n      className=\"input-div\"\n      data-netlify=\"true\"\n      onSubmit={formSubmitHandler}\n      style={{ opacity: \"80%\" }}\n    >\n      <i className=\"fa fa-search\" style={{ opacity: \"50%\" }}></i>\n      <input\n        type=\"text\"\n        name=\"city-name\"\n        className=\"input\"\n        placeholder=\"Enter City\"\n        onKeyPress={props.onKeypress}\n        value={props.value}\n        onChange={props.onChange}\n      />\n    </form>\n  );\n};\n\nexport default Input;\n","import \"./Secondary.css\";\n\nconst Secondary = (props) => {\n  return (\n    <div className=\"secondary-list\">\n      <div className=\"secondary-list-item\">\n        <h1>{props.high}</h1>\n        <h3>High</h3>\n      </div>\n      <div className=\"secondary-list-item\">\n        <h1>{props.wind} mps</h1>\n        <h3>Wind</h3>\n      </div>\n      <div className=\"secondary-list-item\">\n        <h1>{props.sunrise}</h1>\n        <h3>Sunrise</h3>\n      </div>\n      <div className=\"secondary-list-item\">\n        <h1>{props.low}</h1>\n        <h3>Low</h3>\n      </div>\n      <div className=\"secondary-list-item\">\n        <h1>{props.pressure} hPa</h1>\n        <h3>Pressure</h3>\n      </div>\n      <div className=\"secondary-list-item\">\n        <h1>{props.sunset}</h1>\n        <h3>Sunset</h3>\n      </div>\n      <div className=\"secondary-list-item\">\n        <h1>{props.coords.lat}</h1>\n        <h3>Latitude</h3>\n      </div>\n      <div className=\"secondary-list-item\">\n        <h1>{props.coords.lon}</h1>\n        <h3>Longitude</h3>\n      </div>\n      <div className=\"secondary-list-item\">\n        <h1>{props.humidity}%</h1>\n        <h3>Humidity</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Secondary;\n","import \"./CurrentWeather.css\";\n\nimport Secondary from \"./Secondary/Secondary\";\n\nconst CurrentWeather = (props) => {\n  const day = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const month = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  return (\n    <div className=\"current-weather-div\">\n      <div className=\"main\">\n        <div className=\"place_time\">\n          <h1 className=\"place\">{props.weatherData.name}</h1>\n          <h2 className=\"time\">{`${\n            day[props.weatherData.date.getDay()]\n          } ${props.weatherData.date.getDate()} ${\n            month[props.weatherData.date.getMonth()]\n          }`}</h2>\n        </div>\n        <div className=\"weather\">\n          <img src={props.weatherData.icon} alt=\"\" className=\"icon\" />\n          <h1 className=\"temp\">{`${props.weatherData.temp}\\u00B0`}</h1>\n          <h2 className=\"desc\">{props.weatherData.description}</h2>\n        </div>\n      </div>\n      <div className=\"secondary\">\n        <Secondary\n          high={`${props.weatherData.high}\\u00B0`}\n          low={`${props.weatherData.low}\\u00B0`}\n          wind={props.weatherData.wind}\n          sunrise={`${props.weatherData.sunrise.getHours()}:${props.weatherData.sunrise.getMinutes()}`}\n          sunset={`${props.weatherData.sunset.getHours()}:${props.weatherData.sunset.getMinutes()}`}\n          pressure={props.weatherData.pressure}\n          coords={props.weatherData.coordinates}\n          humidity={props.weatherData.humidity}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentWeather;\n","import \"./ForecastWeatherHour.css\";\n\nfunction ConvertDateTo12HFormat(date) {\n    let time = \"\";\n    let hours = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();\n    if(hours === 0) {\n      hours = 12;\n    }\n    let am_pm = date.getHours() >= 12 ? \"PM\" : \"AM\";\n    time = hours + \" \" + am_pm;\n    return time;\n};\n\nconst ForecastWeatherHour = (props) => {\n  var weekday = props.date.toLocaleString(\"default\", { weekday: \"long\" })\n  return (\n    <div className=\"forecast-weather-hour\">\n      <h2 className=\"date\">{weekday}</h2>\n      <h2 className=\"month\">{ConvertDateTo12HFormat(props.date)}</h2>\n      <img src={props.icon} alt=\"\" className=\"icon\" />\n      <h1 className=\"temp\">{`${props.temp}\\u00B0`}</h1>\n    </div>\n  );\n};\n\nexport default ForecastWeatherHour;\n","import \"./ForecastWeather.css\";\n\nimport ForecastWeatherHour from \"./ForecastWeatherHour/ForecastWeatherHour\";\n\nconst ForecastWeather = (props) => {\n  return (\n    <div className=\"forecast\">\n      <h1 className=\"title\">Forecast</h1>\n      <div className=\"forecast-weather\">\n        {props.forecast.map((hour, i) => {\n          return (\n            <ForecastWeatherHour\n              key={hour.date.toISOString()}\n              {...hour}\n              i={i}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ForecastWeather;\n","import \"./Error.css\";\n\nconst Error = () => {\n  return (\n    <div className=\"error\">\n      <h1>Sorry, the specified city was not found.</h1>\n    </div>\n  );\n};\n\nexport default Error;\n","import \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <h1>\n        made with ❤️ by Pooja W\n      </h1>\n    </div>\n  );\n};\n\nexport default Footer;\n","import \"./App.css\";\nimport axios from \"axios\";\n\nimport Input from \"./components/Input/Input\";\nimport CurrentWeather from \"./components/CurrentWeather/CurrentWeather\";\nimport ForecastWeather from \"./components/ForecastWeather/ForecastWeather\";\nimport Error from \"./components/Error/Error\";\nimport Footer from \"./components/Footer/Footer\";\n\nimport { useState, useRef } from \"react\";\n\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(false);\n  const ref = useRef();\n\n  const getWeather = async () => {\n    setError(false);\n    try {\n      const current_weather = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\n      );\n      const data = {\n        temp: Math.round(current_weather.data.main.temp - 273.15),\n        high: Math.round(current_weather.data.main.temp_max - 273.15),\n        low: Math.round(current_weather.data.main.temp_min - 273.15),\n        date: new Date(current_weather.data.dt * 1000),\n        sunrise: new Date(current_weather.data.sys.sunrise * 1000),\n        sunset: new Date(current_weather.data.sys.sunset * 1000),\n        description: current_weather.data.weather[0].description,\n        wind: current_weather.data.wind.speed,\n        name:\n          current_weather.data.name + \", \" + current_weather.data.sys.country,\n        coordinates: {\n          lat: current_weather.data.coord.lat,\n          lon: current_weather.data.coord.lon,\n        },\n        humidity: current_weather.data.main.humidity,\n        pressure: current_weather.data.main.pressure,\n        icon: `http://openweathermap.org/img/wn/${current_weather.data.weather[0].icon}@2x.png`,\n      };\n\n      const forecast_weather = await axios.get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${data.coordinates.lat}&lon=${data.coordinates.lon}&exclude=current,daily,minutely,daily&appid=${API_KEY}`\n      );\n\n      data.timezone = forecast_weather.data.timezone;\n      data.hourly_forecast = forecast_weather.data.hourly.map((hour) => {\n        return {\n          date: new Date(hour.dt * 1000),\n          icon: `http://openweathermap.org/img/wn/${hour.weather[0].icon}@2x.png`,\n          temp: Math.round(hour.temp - 273.15),\n        };\n      });\n\n      setWeatherData(data);\n      setTimeout(() => {\n        console.log(ref.current.offsetTop);\n        window.scrollTo(0, ref.current.offsetTop);\n      }, 500);\n\n      console.log(data);\n    } catch (err) {\n      console.log(err.message);\n      setError(true);\n    }\n  };\n\n  const keyPressHandler = (e) => {\n    if (e.which === 13) {\n      console.log(city);\n      getWeather();\n      setCity(\"\");\n    }\n  };\n\n  const changeHandler = (e) => {\n    setCity(e.target.value);\n  };\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Weather APP</h1>\n      <Input\n        onKeypress={keyPressHandler}\n        onChange={changeHandler}\n        value={city}\n      />\n      <div ref={ref}>\n        {!error && weatherData && <CurrentWeather weatherData={weatherData} />}\n        {!error && weatherData && (\n          <ForecastWeather forecast={weatherData.hourly_forecast} />\n        )}\n        {error && <Error />}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}